{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/marksalama/Documents/knowball-web/src/lib/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nexport const supabase = createClient(supabaseUrl, supabaseKey); "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/marksalama/Documents/knowball-web/src/context/AuthContext.js"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { supabase } from '@/lib/supabase';\n\nconst AuthContext = createContext({});\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n      if (session) {\n        setUser(session.user);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signUp = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signUp({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signIn = async (email, password) => {\n    try {\n      const { data, error } = await supabase.auth.signInWithPassword({\n        email,\n        password,\n      });\n      if (error) throw error;\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      const { error } = await supabase.auth.signOut();\n      if (error) throw error;\n      router.push('/login');\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, signUp, signIn, signOut, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAE,CAAC;AAE5B,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0CAA0C;QAC1C,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,GAAG,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO;YACzE,IAAI,SAAS;gBACX,QAAQ,QAAQ,IAAI;YACtB,OAAO;gBACL,QAAQ;YACV;YACA,WAAW;QACb;QAEA,OAAO,IAAM,aAAa,WAAW;IACvC,GAAG,EAAE;IAEL,MAAM,SAAS,OAAO,OAAO;QAC3B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBACjD;gBACA;YACF;YACA,IAAI,OAAO,MAAM;YACjB,OAAO;QACT,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,SAAS,OAAO,OAAO;QAC3B,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;gBAC7D;gBACA;YACF;YACA,IAAI,OAAO,MAAM;YACjB,OAAO;QACT,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,MAAM,UAAU;QACd,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,sHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;YAC7C,IAAI,OAAO,MAAM;YACjB,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,OAAO;YACd,MAAM;QACR;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAQ;YAAQ;YAAS;QAAQ;kBACnE;;;;;;AAGP;AAEO,MAAM,UAAU;IACrB,OAAO,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AACpB","debugId":null}}]
}